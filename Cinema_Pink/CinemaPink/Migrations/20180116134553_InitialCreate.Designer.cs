// <auto-generated />
using CinemaPink.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CinemaPink.Migrations
{
    [DbContext(typeof(Cinema_context))]
    [Migration("20180116134553_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CinemaPink.Models.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("CinemaPink.Models.Projection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("FilmID");

                    b.Property<int>("RoomID");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.HasIndex("RoomID");

                    b.ToTable("Projections");
                });

            modelBuilder.Entity("CinemaPink.Models.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProjectionID");

                    b.Property<int>("SeatID");

                    b.HasKey("ID");

                    b.HasIndex("ProjectionID");

                    b.HasIndex("SeatID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CinemaPink.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("CinemaPink.Models.Seat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RoomID");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("CinemaPink.Models.Projection", b =>
                {
                    b.HasOne("CinemaPink.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CinemaPink.Models.Room", "Room")
                        .WithMany("Projections")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CinemaPink.Models.Reservation", b =>
                {
                    b.HasOne("CinemaPink.Models.Projection", "Projection")
                        .WithMany()
                        .HasForeignKey("ProjectionID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CinemaPink.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CinemaPink.Models.Seat", b =>
                {
                    b.HasOne("CinemaPink.Models.Room", "Room")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
